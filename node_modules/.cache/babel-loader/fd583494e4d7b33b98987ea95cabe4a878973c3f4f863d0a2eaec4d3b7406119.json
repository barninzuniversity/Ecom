{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ibrab\\\\OneDrive\\\\Bureau\\\\ecom\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n\n  // Load cart from localStorage on mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('tndshop_cart_v1');\n    if (savedCart) {\n      setCart(JSON.parse(savedCart));\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('tndshop_cart_v1', JSON.stringify(cart));\n  }, [cart]);\n  const addToCart = (productId, quantity = 1) => {\n    setCart(prevCart => {\n      const existingItem = prevCart.find(item => item.id === productId);\n      if (existingItem) {\n        return prevCart.map(item => item.id === productId ? {\n          ...item,\n          qty: item.qty + quantity\n        } : item);\n      } else {\n        return [...prevCart, {\n          id: productId,\n          qty: quantity\n        }];\n      }\n    });\n  };\n  const updateCartItem = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n    } else {\n      setCart(prevCart => prevCart.map(item => item.id === productId ? {\n        ...item,\n        qty: quantity\n      } : item));\n    }\n  };\n  const removeFromCart = productId => {\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\n  };\n  const clearCart = () => {\n    setCart([]);\n  };\n  const getCartCount = () => {\n    return cart.reduce((total, item) => total + item.qty, 0);\n  };\n  const getCartTotal = products => {\n    return cart.reduce((total, item) => {\n      const product = products.find(p => p.id === item.id);\n      return total + (product ? product.price * item.qty : 0);\n    }, 0);\n  };\n  const getDeliveryFee = subtotal => {\n    return subtotal >= 200 ? 0 : 7.5;\n  };\n  const getGrandTotal = products => {\n    const subtotal = getCartTotal(products);\n    return subtotal + getDeliveryFee(subtotal);\n  };\n  const value = {\n    cart,\n    addToCart,\n    updateCartItem,\n    removeFromCart,\n    clearCart,\n    getCartCount,\n    getCartTotal,\n    getDeliveryFee,\n    getGrandTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"gPYbNUmWK8tVVPcrFDrHV23HVlE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","cart","setCart","savedCart","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","productId","quantity","prevCart","existingItem","find","item","id","map","qty","updateCartItem","removeFromCart","filter","clearCart","getCartCount","reduce","total","getCartTotal","products","product","p","price","getDeliveryFee","subtotal","getGrandTotal","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ibrab/OneDrive/Bureau/ecom/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  // Load cart from localStorage on mount\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('tndshop_cart_v1');\r\n    if (savedCart) {\r\n      setCart(JSON.parse(savedCart));\r\n    }\r\n  }, []);\r\n\r\n  // Save cart to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('tndshop_cart_v1', JSON.stringify(cart));\r\n  }, [cart]);\r\n\r\n  const addToCart = (productId, quantity = 1) => {\r\n    setCart(prevCart => {\r\n      const existingItem = prevCart.find(item => item.id === productId);\r\n      if (existingItem) {\r\n        return prevCart.map(item =>\r\n          item.id === productId\r\n            ? { ...item, qty: item.qty + quantity }\r\n            : item\r\n        );\r\n      } else {\r\n        return [...prevCart, { id: productId, qty: quantity }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const updateCartItem = (productId, quantity) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(productId);\r\n    } else {\r\n      setCart(prevCart =>\r\n        prevCart.map(item =>\r\n          item.id === productId ? { ...item, qty: quantity } : item\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  const getCartCount = () => {\r\n    return cart.reduce((total, item) => total + item.qty, 0);\r\n  };\r\n\r\n  const getCartTotal = (products) => {\r\n    return cart.reduce((total, item) => {\r\n      const product = products.find(p => p.id === item.id);\r\n      return total + (product ? product.price * item.qty : 0);\r\n    }, 0);\r\n  };\r\n\r\n  const getDeliveryFee = (subtotal) => {\r\n    return subtotal >= 200 ? 0 : 7.5;\r\n  };\r\n\r\n  const getGrandTotal = (products) => {\r\n    const subtotal = getCartTotal(products);\r\n    return subtotal + getDeliveryFee(subtotal);\r\n  };\r\n\r\n  const value = {\r\n    cart,\r\n    addToCart,\r\n    updateCartItem,\r\n    removeFromCart,\r\n    clearCart,\r\n    getCartCount,\r\n    getCartTotal,\r\n    getDeliveryFee,\r\n    getGrandTotal\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}